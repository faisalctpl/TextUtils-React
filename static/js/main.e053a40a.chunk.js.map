{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","placeholder","onClick","toggleMode","aria","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","htmlfor","backgroundColor","onChange","event","console","log","target","value","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","About","myStyle","border","borderColor","aria-labelledby","data-bs-parent","Alert","height","alert","word","lower","charAt","slice","capitalize","message","defaultProps","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e053a40a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (   \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li>\r\n        \r\n        </ul>\r\n        \r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria=\"checked\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes={\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText:\"About\"\r\n};\r\n","import React, {useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n  \r\n    const [text, setText] = useState('');\r\n\r\n    const handleUpClick = () => {\r\n     let newText = text.toUpperCase();  \r\n     setText(newText)\r\n     props.showAlert('Converted to UperCase', 'success')\r\n     \r\n    }\r\n    const handleOnChange = (event) => {\r\n      console.log(\"On change\");   \r\n      setText(event.target.value)\r\n    }\r\n    const handleLoClick = () => {\r\n      \r\n      let newText = text.toLowerCase();  \r\n      setText(newText)\r\n      props.showAlert('Converted to LowerCase', 'success')\r\n    }\r\n    const handleClearText = () => {\r\n      let newText = '';  \r\n      setText(newText)\r\n      props.showAlert('Text has been Cleared', 'success')\r\n    }\r\n    const handleCopyText = () => {\r\n      navigator.clipboard.writeText(text);\r\n      props.showAlert('Text has been Copyed', 'success')\r\n    }\r\n    const handleExtraSpaces = () => {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert('Extra Space Remove', 'success')\r\n    }\r\n  \r\n  return (\r\n      <> \r\n      <div style={{color:props.mode==='dark'?'white':'black'}}>\r\n\r\n   <h1>{props.heading} </h1>\r\n<div className=\"mb-3\">\r\n  <label htmlfor=\"mybox\" className=\"form-label\"></label>\r\n  <textarea className=\"form-control\" style={{backgroundColor:props.mode ==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'black'}} onChange={handleOnChange} id=\"mybox\" value={text} rows=\"8\"></textarea>\r\n  <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Upercase</button>\r\n  <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n  <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearText}>Clear Text</button>\r\n  <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopyText}>Copy Text</button>\r\n  <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n</div>\r\n    </div>\r\n    <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your text Summary</h1>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} charactors</p>\r\n        <p> {0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Nothing to Preview\"}</p>\r\n    </div>\r\n        </>\r\n  );\r\n}\r\n","import React,{} from 'react';\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] =useState({\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n    let myStyle = {\r\n        color: props.mode ==='dark'?'white':'#1e609b',\r\n        backgroundColor: props.mode ==='dark'?'rgb(36 74 104)':'white',\r\n        border: '2px solid',\r\n        borderColor: props.mode ==='dark'?'white':'black'\r\n    }\r\n    return (\r\n        <div className='container' >\r\n            <h1 className='my-3' style={{color: props.mode ==='dark'?'white':'#1e609b'}}>About us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" >\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                         <strong>  Analyze Your Text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                        Text analysis (TA) is a machine learning technique used to automatically extract valuable insights from unstructured text data.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                            <strong>Free to Use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                        More broadly, they pledged to work together to uphold the international order in which countries can choose their own path, free from undue...\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                           <strong>Browser Compatible</strong> \r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                        Test, test, test: Schedule in regular testing to ensure your site always stays compatible, and plan time for additional testing whenever you make significant updates to your site. Make sure to test with as wide a range of browsers as possible, including both older and newer versions, and versions for different devices.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong> {props.alert.message}\r\n    </div>}\r\n    \r\n  </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#1e609b'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      // document.title = 'TextUtils - Dark Mode'\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      // document.title = 'TextUtils - Light Mode'\n    }\n\n  }\n  return (\n    <>\n        <Router>\n      <Navbar title=\"TextUtils\" aboutText=\"About us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\" >\n          <Routes>\n            <Route exact path=\"/about\" element={<About  mode={mode}/>}  />\n            <Route exact path=\"/\" element={<TextForm heading=\"Try TextUtils - Word Counter, Charactor Counter, Remove Extra Spaces\" mode={mode} showAlert={showAlert} />} />\n          </Routes>\n      </div>\n        </Router>\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}